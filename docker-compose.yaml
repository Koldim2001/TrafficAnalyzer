version: '3.8'

services:

  traffic_analyzer_camera_1:
    build: .
    restart: always
    container_name: traffic_analyzer_camera_1
    command: python main_optimized.py
    environment:
      - VIDEO_SRC=test_videos/test_video.mp4
      - ROADS_JSON=configs/entry_exit_lanes.json
      - TABLE_NAME=traffic_info_1
      - DROP_TABLE=False
    volumes:
      - .:/app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - prod_network
    env_file: 
      - secrets.txt

  traffic_analyzer_camera_2:
    build: .
    restart: always
    container_name: traffic_analyzer_camera_2
    command: python main_optimized.py
    environment:
      - VIDEO_SRC=test_videos/longer_example.mp4
      - ROADS_JSON=configs/entry_exit_lanes.json
      - TABLE_NAME=traffic_info_2
      - DROP_TABLE=False
    volumes:
      - .:/app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - prod_network
    env_file: 
      - secrets.txt

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf 
    ports:
      - 8009:8009
    networks:
      - prod_network

  pg_data_wh:
    container_name: pg_data_wh
    image: postgres:15
    restart: always
    ports:
      - "5488:5432"
    volumes:
      - ./services/pg_data_wh:/var/lib/postgresql/data
    networks:
      - prod_network
    env_file: 
      - secrets.txt

  grafana:
    container_name: grafana_building
    image: grafana/grafana:latest
    environment:
      TZ: "Europe/Moscow"
      GF_ALLOW_EMBEDDING: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
    restart: unless-stopped
    ports:
      - "3111:3000"
    volumes:
      - ./services/grafana:/var/lib/grafana
    networks:
      - prod_network
    env_file: 
      - secrets.txt

volumes:
  pg_data_wh:
  pg_grafana:
  grafana:

networks:
  prod_network:
    driver: bridge
